import { a as createComponent, r as renderTemplate, m as maybeRenderHead, u as unescapeHTML } from './astro/server_mOXIqnvi.mjs';
import 'kleur/colors';
import 'clsx';

const html = "<h2 id=\"what-to-expect-from-this-folder-website\">What to expect from this folder website</h2>\n<p>Random projects I have worked on during XAMK Game Programming Game project courses</p>\n<h3 id=\"projects\">Projects</h3>\n<div class=\"projects-container\">\n  <div class=\"projects-left\">\n    <div class=\"project-item\" id=\"Password-generator\">\n        <h4>Password Generator with <span>Python 3.11</span></h4>\n        <p class=\"status\">Status: <span class=\"status-completed\">Completed</span></p>\n        <p>\n            A simple password generator that takes 4 values to \n            create a file that contains the passwords.\n            In the app you can decide:\n            </p><ul>\n                <li>\n                    The amount of paswords that you wish to create\n                </li>\n                <li>\n                    The lenght of the passwords\n                </li>\n                <li>\n                    Does the user wish to use numbers\n                </li>\n                <li>\n                    Does the user wish to use special symbols\n                </li>\n            </ul>\n            All of the passwords are the put into a file\n            that can be located in the same file folder as the \n            program itself. I have yet to fix this part.\n        <p></p>\n        <div class=\"image-container\">\n            <img src=\"/public/images/Password_generator.jpg\" alt=\"img of password generator\">\n            <img src=\"/public/images/Password_generator_1.png\" alt=\"filled\">\n        </div>\n        <p>\n            I got the idea for this password generator as I was working on the\n            Python course provided Helsinki University. I wanted to make it into\n            an app, so I did. I used tKinter library from python for the UI\n            and made it look as simple and easy-to-use as possible.\n        </p>\n        <h4>Problems</h4>\n        <p>\n            I did not remember how to use tKinter as it \n            had been over a year since I last worked on it.\n            I watched a part of the tKinter tutorial provided\n            by FreeCodeCamp and I was already on my way. \n            I also had problems creating the file for the saved passwords,\n            but I am going to fix this issue once I find out how.\n        </p>\n        <a href=\"https://github.com/AstRoXAMK/Pyhton-password-generator/tree/main\" class=\"link-text\">\n            Link to source code\n        </a>\n    </div>\n    <br>\n  </div>\n  <div class=\"projects-right\">\n    <div class=\"project-item\" id=\"Tetris\">\n      <h4>Tetris with <span>PyGame</span></h4>\n      <p class=\"status\">Status: <span class=\"status-working\">Working on</span>\n      </p><p>\n          A personal game version of tetris. I have plans to use this game file for future ML/AI projects\n          of creating bots that can continuesly get better as the game continues.\n      </p>\n      <div class=\"image-container\">\n          <p>\n              ---- Pictures to come ----\n          </p>\n      </div>\n      <p>\n          I got the Idea from watchin PyGame tutorials and I also saw a deep learning video of\n          bots for the game \"Jump King\". The video creator made his own version of Jump King in JavaScript\n          so I am hoping to be able to do the same for Tetris.\n      </p>\n      <h4>Problems</h4>\n      <p>\n          I have made just the base game with a tutorial, bu the bots are something that I have yet to work on.\n      </p>\n      <a href=\"#\" class=\"link-text\" target=\"_blank\">\n          Link to source code\n      </a>\n    </div>\n  </div>\n</div>\n<style>\n  .projects-container{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n  }\n\n  .project-item{\n    border: 5px solid var(--accent-cyan-2);\n    border-radius: 50px;\n    padding: 0 1rem 2rem 1rem;\n    background-color: var(--accent-gray);\n  }\n\n  .status{\n    font-size: 1.2rem;\n    margin: 1rem 0;\n    text-align: center;\n  }\n\n  .status-completed{\n    color: var(--accent-code);\n  }\n\n  .status-working{\n    color: var(--accent-working);\n  }\n\n  .status-dropped{\n    color: var(--accent-dropped);\n  }\n\n  .project-item ul{\n    margin: 1rem 0;\n  }\n\n  .image-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n    margin: 1rem 0;\n  }\n\n  .link-text{\n    text-transform: uppercase;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--accent-purple-3);\n    text-decoration: none;\n    font-weight: bold;\n    font-size: 1.5rem;\n    margin: 1rem 0 0 0;\n  }\n\n  .link-text:hover{\n    color: var(--accent-purple-2);\n  }\n\n  @media (max-width: 719px){\n    .projects-container{\n      grid-template-columns: 1fr;\n    }\n\n    .link-text{\n      font-size: 1rem;\n    }\n  }\n\n</style>";

				const frontmatter = {"title":"Dump Folder","publishDate":"2023-01-12T00:00:00.000Z","img_card":"/images/Dumpster.png","img":null,"img_alt":"A game made with haste","description":"A library of random small projects that took less than 5 hours\n","tags":["Projects","Python"]};
				const file = "C:/GitHub/astroxamk.github.io/src/content/projects/Dump-folder.md";
				const url = undefined;
				function rawContent() {
					return "\n## What to expect from this folder website\n\nRandom projects I have worked on during XAMK Game Programming Game project courses\n\n### Projects\n\n<div class=\"projects-container\">\n  <div class=\"projects-left\">\n    <div class=\"project-item\" id=\"Password-generator\">\n        <h4>Password Generator with <span>Python 3.11</span></h4>\n        <p class=\"status\">Status: <span class=\"status-completed\">Completed</span></p>\n        <p>\n            A simple password generator that takes 4 values to \n            create a file that contains the passwords.\n            In the app you can decide:\n            <ul>\n                <li>\n                    The amount of paswords that you wish to create\n                </li>\n                <li>\n                    The lenght of the passwords\n                </li>\n                <li>\n                    Does the user wish to use numbers\n                </li>\n                <li>\n                    Does the user wish to use special symbols\n                </li>\n            </ul>\n            All of the passwords are the put into a file\n            that can be located in the same file folder as the \n            program itself. I have yet to fix this part.\n        </p>\n        <div class=\"image-container\">\n            <img src=\"/public/images/Password_generator.jpg\" alt=\"img of password generator\">\n            <img src=\"/public/images/Password_generator_1.png\" alt=\"filled\">\n        </div>\n        <p>\n            I got the idea for this password generator as I was working on the\n            Python course provided Helsinki University. I wanted to make it into\n            an app, so I did. I used tKinter library from python for the UI\n            and made it look as simple and easy-to-use as possible.\n        </p>\n        <h4>Problems</h4>\n        <p>\n            I did not remember how to use tKinter as it \n            had been over a year since I last worked on it.\n            I watched a part of the tKinter tutorial provided\n            by FreeCodeCamp and I was already on my way. \n            I also had problems creating the file for the saved passwords,\n            but I am going to fix this issue once I find out how.\n        </p>\n        <a href=\"https://github.com/AstRoXAMK/Pyhton-password-generator/tree/main\" class=\"link-text\">\n            Link to source code\n        </a>\n    </div>\n    <br>\n  </div>\n  <div class=\"projects-right\">\n    <div class=\"project-item\" id=\"Tetris\">\n      <h4>Tetris with <span>PyGame</span></h4>\n      <p class=\"status\">Status: <span class=\"status-working\">Working on</span></>\n      <p>\n          A personal game version of tetris. I have plans to use this game file for future ML/AI projects\n          of creating bots that can continuesly get better as the game continues.\n      </p>\n      <div class=\"image-container\">\n          <p>\n              ---- Pictures to come ----\n          </p>\n      </div>\n      <p>\n          I got the Idea from watchin PyGame tutorials and I also saw a deep learning video of\n          bots for the game \"Jump King\". The video creator made his own version of Jump King in JavaScript\n          so I am hoping to be able to do the same for Tetris.\n      </p>\n      <h4>Problems</h4>\n      <p>\n          I have made just the base game with a tutorial, bu the bots are something that I have yet to work on.\n      </p>\n      <a href=\"#\" class=\"link-text\" target=\"_blank\">\n          Link to source code\n      </a>\n    </div>\n  </div>\n</div>\n\n<style>\n  .projects-container{\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 3rem;\n  }\n\n  .project-item{\n    border: 5px solid var(--accent-cyan-2);\n    border-radius: 50px;\n    padding: 0 1rem 2rem 1rem;\n    background-color: var(--accent-gray);\n  }\n\n  .status{\n    font-size: 1.2rem;\n    margin: 1rem 0;\n    text-align: center;\n  }\n\n  .status-completed{\n    color: var(--accent-code);\n  }\n\n  .status-working{\n    color: var(--accent-working);\n  }\n\n  .status-dropped{\n    color: var(--accent-dropped);\n  }\n\n  .project-item ul{\n    margin: 1rem 0;\n  }\n\n  .image-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 1rem;\n    margin: 1rem 0;\n  }\n\n  .link-text{\n    text-transform: uppercase;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: var(--accent-purple-3);\n    text-decoration: none;\n    font-weight: bold;\n    font-size: 1.5rem;\n    margin: 1rem 0 0 0;\n  }\n\n  .link-text:hover{\n    color: var(--accent-purple-2);\n  }\n\n  @media (max-width: 719px){\n    .projects-container{\n      grid-template-columns: 1fr;\n    }\n\n    .link-text{\n      font-size: 1rem;\n    }\n  }\n\n</style>";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"what-to-expect-from-this-folder-website","text":"What to expect from this folder website"},{"depth":3,"slug":"projects","text":"Projects"}];
				}

				const Content = createComponent((result, _props, slots) => {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;

					return renderTemplate`${maybeRenderHead()}${unescapeHTML(html)}`;
				});

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, rawContent, url };
